// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package postgresql

import (
	"context"
)

const addProcessor = `-- name: AddProcessor :one
INSERT INTO processors (
  name,
  runtime_id,
  active
) VALUES (
  $1,
  $2,
  true
) ON CONFLICT (name) DO UPDATE 
SET 
  runtime_id = EXCLUDED.runtime_id,
  active = EXCLUDED.active
RETURNING name, runtime_id, active, created
`

type AddProcessorParams struct {
	Name      string
	RuntimeID int32
}

func (q *Queries) AddProcessor(ctx context.Context, arg AddProcessorParams) (Processor, error) {
	row := q.db.QueryRow(ctx, addProcessor, arg.Name, arg.RuntimeID)
	var i Processor
	err := row.Scan(
		&i.Name,
		&i.RuntimeID,
		&i.Active,
		&i.Created,
	)
	return i, err
}
